# Tutorials
David Mahler

# Setup
git config --global user.name "ningishziddatao"
git config user.name "ningishziddatao"
.gitignore#insert file and directory names into the .gitignore file to ignore them

# Credentials (no more login can also be done with ssh)
# https://www.shellhacks.com/git-config-username-password-store-credentials/
git config credential.helper store
git config --global credential.helper store
git config --global credential.github.com.useHttpPath true
# Then push or pull then Inside git-credentials username and passwd will be stored in ~/.git-credentials
https://<USERNAME>:<PASSWORD>@github.com/path/to/repo1.git
https://<USERNAME>:<PASSWORD>@github.com/path/to/repo2.git

# Recieve
git clone
git pull <url>
git fetch origin
git merge orgin/master
git pull upstream master#update

# Info
git status
git log
git remote -v
git branch -a -v
git ls-files
graph

# Manage
git branch <branch name>#create
git add <file>
git reset HEAD <file>
git remote add test https://github.com/NingishziddaTao/CodeBase/
git remote remove test https://github.com/NingishziddaTao/CodeBase/
git commit -m "discription"
git push -u test master #-u set branch
git merge#to master branch
git revert

git config pull.rebase false  # merge (the default strategy)
git config pull.rebase true   # rebase
git config pull.ff only       # fast-forward only

git branch -d <branch>#delete
git push origin --delete <branch name>

# Switch branch
git checkout master
